user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;
    resolver 127.0.0.11; # docker compose network의 dns주소로 변경함 'cat /etc/resolv.conf로 확인'

    server {
        listen [::]:80;
        listen 80;

        server_name api.server.co.kr;  # 서비스할 도메인으로 변경

        location /delivery {
            # 기본값으로 설정
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $http_host;

            proxy_pass http://api-delivery:8080;

        }

        location /market {
            # 기본값으로 설정
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $http_host;

            proxy_pass http://api-market:8080;

        }
    }

#     server {
#         listen [::]:80;
#         listen 80;
#
#         server_name api.market.co.kr;  # 서비스할 도메인으로 변경
#
#         location / {
#             # 기본값으로 설정
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header Host $http_host;
#
#             proxy_pass http://api-market:8080;
#
#         }
#     }


    server {
        listen [::]:80;
        listen 80;

        server_name frontend.gmarket.co.kr;  # 서비스할 도메인으로 변경

        location / {
            # 기본값으로 설정
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $http_host;

            set $upstream frontend;
            proxy_pass http://$upstream:8080;

        }
    }

}

stream {
    server {
        listen 5005;
        proxy_pass api-delivery:5005;
    }

    server {
        listen 5006;
        proxy_pass api-market:5005;
    }

    # docker-compose를 이용하여 다수의 spring boot 프로젝트 연결하기 (Part 2) 진행시 주석을 풀어주세요
    # server {
    #     listen 5007;
    #     proxy_pass frontend:5005;
    # }
}